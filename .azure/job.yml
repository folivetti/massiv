parameters:
- name: setupEnvironmentSteps
  displayName: 'Setup stack and all other pre-build stuff'
  type: stepList
  default: []
- name: jobName
  type: string
- name: vmImage
  type: string
- name: os
  type: string
- name: stackRoot
  default: "$(System.DefaultWorkingDirectory)/.stack"
- name: stackWork
  default: ".stack-work"
- name: stackProjectPath
  displayName: "Path to the project."
  default: "$(Build.SourcesDirectory)"

jobs:
- job: ${{ parameters.jobName }}
  timeoutInMinutes: 120
  variables:
    STACK_ROOT: "${{ parameters.stackRoot }}"
    STACK_WORK: "${{ parameters.stackWork }}"
    BUILD_ARGS: "-j 2 --no-terminal --bench --no-run-benchmarks"
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      lts-12.14:
        RESOLVER: "lts-12.14" # ghc-8.4.3
        STACK_YAML: "stack-extra-deps.yaml"
      lts-12.26:
        RESOLVER: "lts-12.26" # ghc-8.4.4
        STACK_YAML: "stack-extra-deps.yaml"
      lts-13.30:
        RESOLVER: "lts-13.30" # ghc-8.6.5
        STACK_YAML: "stack-extra-deps.yaml"
      lts-14.27:
        RESOLVER: "lts-14.27" # ghc-8.6.5
        STACK_YAML: "stack-extra-deps.yaml"
      lts-16.31:
        RESOLVER: "lts-16.31" # ghc-8.8.4
      # lts-15:
      #   RESOLVER: "lts-15" # ghc-8.8.3
      # nightly:
      #   RESOLVER: "nightly"
    maxParallel: 5
  steps:
  - task: Cache@2
    displayName: Cache STACK_ROOT
    inputs:
      key: '"${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "$(STACK_ROOT)"
      restoreKeys: |
        "${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "STACK_ROOT" | "$(RESOLVER)" | "refs/heads/master"
      cacheHitVar: STACK_ROOT_RESTORED
    continueOnError: true
  - task: Cache@2
    displayName: Cache STACK_WORK
    inputs:
      key: '"${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "${{ parameters.stackProjectPath }}/${{ parameters.stackWork }}"
      restoreKeys: |
        "${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "STACK_WORK" | "$(RESOLVER)" | "refs/heads/master"
      cacheHitVar: STACK_WORK_RESTORED
    continueOnError: true
  - task: Cache@2
    displayName: Cache STACK_WORK massiv
    inputs:
      key: '"${{ parameters.jobName }}" | "massiv" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "${{ parameters.stackProjectPath }}/massiv/${{ parameters.stackWork }}"
      restoreKeys: |
        "${{ parameters.jobName }}" | "massiv/.stack-work" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "massiv/.stack-work" | "$(RESOLVER)" | "refs/heads/master"
    continueOnError: true
  - task: Cache@2
    displayName: Cache STACK_WORK massiv-test
    inputs:
      key: '"${{ parameters.jobName }}" | "massiv-test" | "$(RESOLVER)" | "$(Build.SourceBranch)"'
      path: "${{ parameters.stackProjectPath }}/massiv-test/${{ parameters.stackWork }}"
      restoreKeys: |
        "${{ parameters.jobName }}" | "massiv-test/.stack-work" | "$(RESOLVER)" | "$(Build.SourceBranch)"
        "${{ parameters.jobName }}" | "massiv-test/.stack-work" | "$(RESOLVER)" | "refs/heads/master"
    continueOnError: true
  - ${{ each step in parameters.setupEnvironmentSteps }}:
    - ${{ each pair in step }}:
        ${{ pair.key }}: ${{ pair.value }}
  - task: Bash@3
    displayName: 'stack build'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test --no-run-tests ${BUILD_ARGS} --haddock --no-haddock-deps
  - task: Bash@3
    displayName: 'massiv-test:tests'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test massiv-test:tests ${BUILD_ARGS}
  - task: Bash@3
    displayName: 'massiv:doctests'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test massiv:doctests ${BUILD_ARGS}
